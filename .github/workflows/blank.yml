name: Generate ASCII Artwork

on:  
  push

env:
  CONTAINER_REGISTRY: docker.io
  DOCKER_USERNAME: dockerUsername

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install Cowsay Program
        run: sudo apt-get install cowsay -y

      - name: Execute Cowsay CMD
        run: cowsay -f dragon "Run for cover, I am a DRAGON....RAWR" >> dragon.txt
     
      - name: Archive Dragon File
        uses: actions/upload-artifact@v3
        with:
          name: dragon-text-file
          path: dragon.txt
 
  test:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: dragon-text-file

      - name: Test File Exists
        run: grep -i "dragon" dragon.txt


  docker:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Docker Build
        run: echo docker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/imageName:latest

      - name: Docker Login
        run: |
          echo Secret - ${{ secrets.DOCKER_PASSWORD }}
          echo docker login --username=$DOCKER_USERNAME --password=${{ secrets.DOCKER_PASSWORD }}
       
      - name: Docker Publish
        run: echo docker push $CONTAINER_REGISTRY/$DOCKER_USERNAME/imageName:latest

  deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    strategy:
      matrix:
        images: [hello-world, alpine]
        os: [ubuntu-latest, ubuntu-20.04, windows-latest]
        include:
          - images: amd64/alpine
            os: ubuntu-22.04
        exclude:
          - images: alpine
            os: windows-latest
    # needs: [docker]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Echo Docker Details
        run: docker info


      - name: Run Images
        run: docker run ${{ matrix.images }}
